<style>
#collection-filters-fixed {
  width: 100%;
  background: black;
  color: white;
    position: absolute;
    top: 120px;
    left: 0px;
    z-index: 999;
}  
  .navigation-container {
    display: flex;
  }
  .navigation-container .nav-container{
    width: 30%;
    height: 500px;
    padding: 40px 0px;
  }
#collection-filters-fixed .sidebar__filter__group .icon-box, .sidebar__filter__group .icon-reset {
  left: -20px;
  right: 8px;
}
#collection-filters-fixed  .sidebar__filter__group  {
  width: 40%;
}
  .applyButton {
    border-radius: 0px;
    background: white;
    color: black;
    padding: 10px 20px;
  }
#collection-filters-fixed  .filter__button input:checked~label .icon-box .checkbox-core {
    fill: #fff;
}
#collection-filters-fixed  .sort__button {
  padding: 5px;
}
.filterButton.active svg g {
  fill: #fff!important;
}
  .sort__button.active {
    border: 1px solid white;
  }
  .collection__nav__buttons {
    align-items: center;
  }
  .collection__filters__toggle, .popout--navbar .popout__toggle {
    border-right: none;
  }
  .collection__filters__toggle.drawer--visible #collection-filters-fixed{
    display: block;
  }
</style>



<div id="collection-filters-fixed" class="hideMe">
  <div class="wrapper">
    <div class="navigation-container">
<!--             {%- for filter in collection.filters -%}
        {% render 'filters-fixed', filter: filter %}
      {%- endfor -%} -->
      {%- for block in section.blocks -%}
          {% if block.type == 'group' %}
            <div class="nav-container">
            <h6>{{ block.settings.title }}</h6>
            <ul style="{% if block.settings.title == 'Color' %}columns: 2; width: 260px;{% endif %}">
             {%- assign settings_tag_array = block.settings.group_tags | split: ', ' -%}
             {%- for settings_tag in settings_tag_array -%}
               <li class="filterButton" title="{{ block.settings.title }}">{% render 'icon-box-white' %}  <span value="{{ settings_tag }}" style="padding-left: 10px">{{  settings_tag }}</span></li>
             {% endfor %}
            </ul>
              </div>
            {% endif %}
        {% endfor %}
                 <div class="nav-container" style="border-left: 1px solid white; padding:40px 20px">
            <h6>Sort</h6>
            <ul style="">
              <li class="sort__button" filterparams="sort_by=price-ascending">Price: Low to High</li>
              <li class="sort__button" filterparams="sort_by=price-descending">Price: High to Low</li>
              <li class="sort__button" filterparams="sort_by=relevance">Relevance</li>
            </ul>
              </div>
                <div class="nav-container">
            <button class="btn  uppercase applyButton">Apply</button>

              </div>
    </div>
  </div>
</div>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
  let tags = [];
  let sortParams = null;
  let filterParams = '';
  let viewParams = '';
    const collectionHandle = `{{ collection.handle }}`;
  function applyFilter() {
      let params  = [...new Set(tags)];
      params.forEach(param => {
        if(filterParams) {
          filterParams =  `${filterParams}&filter.p.tag=${param}`;
        } else {
          filterParams =  `filter.p.tag=${param}`;
        }

        
      })
    if(sortParams) {
      filterParams = `${filterParams}&${sortParams}`;
    }
    if(viewParams) {
      filterParams = `${filterParams}&${viewParams}`;
    }
    if(filterParams) {
      window.location.href = `${window.location.pathname}?${filterParams}`;
    } else {
      window.location.href = `${window.location.pathname}`;
    }    
  }
  if(window.location.href.split(collectionHandle)[1].length > 0 ) {
    let params = window.location.href.split('?');
    if(params[1])
    tags = params[1].match(/(?<=\=)[^&]+/g);
  }
  const params = new URLSearchParams(window.location.search);
  sortParams = params.get('sort_by');
  viewParams = params.get('view');
  tags.forEach(tag => {
    $('.selected-filters').append(`    <a class="active__filters__remove" filterTag="${tag}"">         
                    ${tag.replace('+', ' ')}
                    <span class="filter__x">X</span>
                </a>`)
    $("span[value='" + tag.replace('+', ' ') + "']").parent().addClass('active');
  })
  if(tags.length > 0) {
      $('.selected-filters').append(`    <a class="active__filters__remove" filterTag="CLEAR">         
                   CLEAR ALL
                </a>`)
  }
  $(document).ready(() => {   
    $('.collection__filters__toggle').click(function(){     
      console.log('thdkfjd', $(this))
       if($(this).hasClass("drawer--visible")) {
         $('#collection-filters-fixed').css('display', 'block')
       } else {
         $('#collection-filters-fixed').css('display', 'block')
       }
    })

    $('#collection-filters-fixed li.filterButton').click(function(){   
      const filterValue = $(this).find('span').attr('value').split(' ').join('+');
      if($(this).hasClass("active")) {
        tags = tags.filter(e => e !== filterValue); 
      } else {
        tags.push(filterValue);
       
      }
       $(this).toggleClass('active');
      console.log(tags);
    })
    $('.active__filters__remove').click(function(){   
      tag = $(this).attr('filtertag');
      if(tag == 'CLEAR') {
        tags = [];
      } else {
        tags = tags.filter(value => value != tag);
      }
  
      applyFilter();
    })
   
  })
</script>